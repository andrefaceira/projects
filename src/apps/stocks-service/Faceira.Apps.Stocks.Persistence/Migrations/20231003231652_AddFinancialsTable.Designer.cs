// <auto-generated />
using System;
using Faceira.Apps.Stocks.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Faceira.Apps.Stocks.Persistence.Migrations
{
    [DbContext(typeof(StocksContext))]
    [Migration("20231003231652_AddFinancialsTable")]
    partial class AddFinancialsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("stocks")
                .HasAnnotation("ProductVersion", "8.0.0-rc.1.23419.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Faceira.Apps.Stocks.Messages.Companies.CompanyUpdated", b =>
                {
                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("IpoDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Symbol");

                    b.ToTable("Companies", "stocks");
                });

            modelBuilder.Entity("Faceira.Apps.Stocks.Messages.Financials.FinancialReport", b =>
                {
                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.Property<int>("Quarter")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BookValuePerShare")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CashFlowFinancing")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CashFlowFree")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CashFlowInvesting")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CashFlowOperating")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CostsOfGoodsSold")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DebtNet")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DebtTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DividendPerShare")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Ebit")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Ebitda")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EpsBasic")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EpsDiluted")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NetIncome")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingExpenses")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingIncome")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OutstandingSharesBasic")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OutstandingSharesDiluted")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Revenue")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalAssets")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalEquity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalLiabilities")
                        .HasColumnType("numeric");

                    b.HasKey("Symbol", "Type", "Year", "Quarter");

                    b.HasIndex("Symbol", "Type");

                    b.ToTable("Financials", "stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
